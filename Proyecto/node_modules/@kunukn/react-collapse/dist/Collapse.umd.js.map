{"version":3,"file":"Collapse.umd.js","sources":["../src/components/Collapse/Collapse.hooks.jsx"],"sourcesContent":["import './collapse.css';\r\nimport React, { useState, useEffect, useLayoutEffect, useRef } from 'react';\r\n\r\nlet COLLAPSED = 'collapsed';\r\nlet COLLAPSING = 'collapsing';\r\nlet EXPANDING = 'expanding';\r\nlet EXPANDED = 'expanded';\r\n\r\nexport default function Collapse({\r\n  className,\r\n  children,\r\n  transition,\r\n  render,\r\n  elementType,\r\n  layoutEffect,\r\n  isOpen,\r\n  collapseHeight,\r\n  onInit,\r\n  onChange,\r\n  ...attrs\r\n}) {\r\n  let contentRef = useRef(null);\r\n  let [collapseState, setCollapseState] = useState(isOpen ? EXPANDED : COLLAPSED);\r\n  let [collapseStyle, setCollapseStyle] = useState({\r\n    height: isOpen ? null : getCollapseHeight(),\r\n    visibility: isOpen ? null : getCollapsedVisibility(),\r\n  });\r\n  let [hasReversed, setHasReversed] = useState(false);\r\n  let firstUpdate = useRef(true);\r\n\r\n  let effect = layoutEffect ? useLayoutEffect : useEffect;\r\n  effect(() => {\r\n    if (!contentRef.current) return;\r\n\r\n    if (firstUpdate.current) {\r\n      onCallback(onInit);\r\n\r\n      // Don't run effect on first render, the DOM styles are already correctly set\r\n      firstUpdate.current = false;\r\n      console.log('skip effect first render');\r\n      return;\r\n    }\r\n\r\n    console.log('effect after didUpdate DOM update');\r\n\r\n    switch (collapseState) {\r\n      case EXPANDING:\r\n        setExpanding();\r\n        break;\r\n      case COLLAPSING:\r\n        setCollapsing();\r\n        break;\r\n      case EXPANDED:\r\n        setExpanded();\r\n        break;\r\n      case COLLAPSED:\r\n        setCollapsed();\r\n        break;\r\n      // no default\r\n    }\r\n  }, [collapseState]);\r\n\r\n  function onCallback(callback) {\r\n    if (callback) {\r\n      console.log('onCallback ' + callback.name);\r\n      callback({\r\n        collapseState,\r\n        collapseStyle,\r\n        hasReversed,\r\n        isMoving: isMoving(collapseState),\r\n      });\r\n    }\r\n  }\r\n\r\n  function getCollapseHeight() {\r\n    return collapseHeight || '0px';\r\n  }\r\n\r\n  function getCollapsedVisibility() {\r\n    return collapseHeight ? '' : 'hidden';\r\n  }\r\n\r\n  function setCollapsed() {\r\n    console.log('setCollapsed');\r\n\r\n    if (!contentRef.current) return;\r\n\r\n    setCollapseStyle({\r\n      height: getCollapseHeight(),\r\n      visibility: getCollapsedVisibility(),\r\n    });\r\n    onCallback(onChange);\r\n  }\r\n\r\n  function setCollapsing() {\r\n    console.log('setCollapsing');\r\n\r\n    if (!contentRef.current) return;\r\n\r\n    let height = getContentHeight(); // capture height before setting it to async setState method\r\n\r\n    setCollapseStyle({\r\n      height,\r\n      visibility: '',\r\n    });\r\n\r\n    nextFrame(() => {\r\n      setCollapseStyle({\r\n        height: getCollapseHeight(),\r\n        visibility: '',\r\n      });\r\n      onCallback(onChange);\r\n    });\r\n  }\r\n\r\n  function setExpanding() {\r\n    console.log('setExpanding');\r\n\r\n    nextFrame(() => {\r\n      if (contentRef.current) {\r\n        let height = getContentHeight(); // capture height before setting it to async setState method\r\n\r\n        setCollapseStyle({\r\n          height,\r\n          visibility: '',\r\n        });\r\n        onCallback(onChange);\r\n      }\r\n    });\r\n  }\r\n\r\n  function setExpanded() {\r\n    console.log('setExpanded');\r\n\r\n    if (!contentRef.current) return;\r\n\r\n    setCollapseStyle({\r\n      height: '',\r\n      visibility: '',\r\n    });\r\n    onCallback(onChange);\r\n  }\r\n\r\n  function getContentHeight() {\r\n    return `${contentRef.current.scrollHeight}px`;\r\n  }\r\n\r\n  function onTransitionEnd({ target, propertyName }) {\r\n    console.log('onTransitionEnd', collapseState, propertyName);\r\n\r\n    if (target === contentRef.current && propertyName === 'height') {\r\n      switch (collapseState) {\r\n        case EXPANDING:\r\n          setCollapseState(EXPANDED);\r\n          break;\r\n        case COLLAPSING:\r\n          setCollapseState(COLLAPSED);\r\n          break;\r\n        // no default\r\n      }\r\n    }\r\n  }\r\n\r\n  // getDerivedStateFromProps\r\n  let didOpen = collapseState === EXPANDED || collapseState === EXPANDING;\r\n\r\n  if (!didOpen && isOpen) {\r\n    setHasReversed(collapseState === COLLAPSING);\r\n    setCollapseState(EXPANDING);\r\n  }\r\n  if (didOpen && !isOpen) {\r\n    setHasReversed(collapseState === EXPANDING);\r\n    setCollapseState(COLLAPSING);\r\n  }\r\n  // END getDerivedStateFromProps\r\n\r\n  let style = {\r\n    transition,\r\n    ...collapseStyle,\r\n  };\r\n  let ElementType = elementType || 'div';\r\n  let collapseClassName = `${className || 'collapse-css-transition'} --is-${collapseState}`;\r\n\r\n  return (\r\n    <ElementType\r\n      ref={contentRef}\r\n      style={style}\r\n      className={collapseClassName}\r\n      onTransitionEnd={onTransitionEnd}\r\n      {...attrs}\r\n    >\r\n      {typeof render === 'function' ? render(collapseState) : children}\r\n    </ElementType>\r\n  );\r\n}\r\n\r\nfunction nextFrame(callback) {\r\n  // Ensure it is always visible on collapsing, afterFrame didn't work\r\n  requestAnimationFrame(() => requestAnimationFrame(callback));\r\n}\r\n\r\nfunction isMoving(collapseState) {\r\n  return collapseState === EXPANDING || collapseState === COLLAPSING;\r\n}\r\n"],"names":["COLLAPSED","COLLAPSING","EXPANDING","EXPANDED","nextFrame","callback","requestAnimationFrame","isMoving","collapseState","className","children","transition","render","elementType","layoutEffect","isOpen","collapseHeight","onInit","onChange","attrs","contentRef","useRef","useState","setCollapseState","height","getCollapseHeight","visibility","getCollapsedVisibility","collapseStyle","setCollapseStyle","hasReversed","setHasReversed","firstUpdate","onCallback","getContentHeight","current","scrollHeight","useLayoutEffect","useEffect","setCollapsing","didOpen","style","ElementType","collapseClassName","React","ref","onTransitionEnd","target","propertyName"],"mappings":"60CAGA,IAAIA,EAAY,YACZC,EAAa,aACbC,EAAY,YACZC,EAAW,WA8Lf,SAASC,EAAUC,GAEjBC,sBAAsB,kBAAMA,sBAAsBD,KAGpD,SAASE,EAASC,UACTA,IAAkBN,GAAaM,IAAkBP,SAlM3C,gBACbQ,IAAAA,UACAC,IAAAA,SACAC,IAAAA,WACAC,IAAAA,OACAC,IAAAA,YACAC,IAAAA,aACAC,IAAAA,OACAC,IAAAA,eACAC,IAAAA,OACAC,IAAAA,SACGC,iIAECC,EAAaC,SAAO,UACgBC,WAASP,EAASZ,EAAWH,MAAhEQ,OAAee,WACoBD,WAAS,CAC/CE,OAAQT,EAAS,KAAOU,IACxBC,WAAYX,EAAS,KAAOY,SAFzBC,OAAeC,WAIgBP,YAAS,MAAxCQ,OAAaC,OACdC,EAAcX,UAAO,YAkChBY,EAAW5B,GACdA,GAEFA,EAAS,CACPG,cAAAA,EACAoB,cAAAA,EACAE,YAAAA,EACAvB,SAAUA,EAASC,cAKhBiB,WACAT,GAAkB,eAGlBW,WACAX,EAAiB,GAAK,kBAgEtBkB,oBACGd,EAAWe,QAAQC,oBAlHlBtB,EAAeuB,kBAAkBC,aACvC,cACAlB,EAAWe,YAEZH,EAAYG,eACdF,EAAWhB,QAGXe,EAAYG,SAAU,UAOhB3B,QACDN,EAwEPE,EAAU,cACJgB,EAAWe,QAAS,KAClBX,EAASU,IAEbL,EAAiB,CACfL,OAAAA,EACAE,WAAY,KAEdO,EAAWf,iBA7ERjB,iBAgDFmB,EAAWe,aAEZX,EAASU,IAEbL,EAAiB,CACfL,OAAAA,EACAE,WAAY,KAGdtB,EAAU,WACRyB,EAAiB,CACfL,OAAQC,IACRC,WAAY,KAEdO,EAAWf,MA7DTqB,cAEGpC,EAkFFiB,EAAWe,UAEhBN,EAAiB,CACfL,OAAQ,GACRE,WAAY,KAEdO,EAAWf,eArFJlB,EA8BFoB,EAAWe,UAEhBN,EAAiB,CACfL,OAAQC,IACRC,WAAYC,MAEdM,EAAWf,OA/BV,CAACV,QAwGAgC,EAAUhC,IAAkBL,GAAYK,IAAkBN,GAEzDsC,GAAWzB,IACdgB,EAAevB,IAAkBP,GACjCsB,EAAiBrB,IAEfsC,IAAYzB,IACdgB,EAAevB,IAAkBN,GACjCqB,EAAiBtB,QAIfwC,sUACF9B,WAAAA,GACGiB,GAEDc,EAAc7B,GAAe,MAC7B8B,YAAuBlC,GAAa,2CAAkCD,UAGxEoC,gBAACF,KACCG,IAAKzB,EACLqB,MAAOA,EACPhC,UAAWkC,EACXG,gCAzCuBC,IAAAA,OAAQC,IAAAA,gBAG7BD,IAAW3B,EAAWe,SAA4B,WAAjBa,SAC3BxC,QACDN,EACHqB,EAAiBpB,cAEdF,EACHsB,EAAiBvB,MAiCjBmB,GAEe,mBAAXP,EAAwBA,EAAOJ,GAAiBE"}